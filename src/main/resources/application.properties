server.port=8088

spring.jpa.properties.javax.persistence.validation.mode = none
spring.jackson.serialization.fail-on-empty-beans=false


google.app.id=819992813469-ak5av5qqm52a2hdq669ouece545b0s5r.apps.googleusercontent.com
google.app.secret=b3ITvhserfQd7tV-bysedFi5
google.redirect.uri=http://localhost:8088/login-google
google.link.get.token=https://accounts.google.com/o/oauth2/token
google.link.get.user_info=https://www.googleapis.com/oauth2/v1/userinfo?access_token=



spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://ec2-34-225-103-117.compute-1.amazonaws.com:5432/d239id6kdbog8r?currentSchema=public
spring.datasource.username=yacusxlgzvfhkr
spring.datasource.password=b01e1921de71f6d80a788c24f0e60724f544192a315f45b79274bbfb876f7519
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false


#spring.datasource.url = jdbc:mysql://localhost:3306/shopdongho?useSSL=false
#spring.datasource.username = root
#spring.datasource.password = 123456789
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Log JPA queries
# Comment this in production
spring.jpa.show-sql=true


# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto =update

# ===============================
# THYMELEAF
# ===============================
spring.thymeleaf.cache=false

#ckeditor.storage.image.path=src/main/resources/static/uploadmedia/
#ckeditor.access.image.url=https://luxury-watches99.herokuapp.com/
#ckeditor.access.image.url=http://localhost:8088/
#
app.firebase-configuration-file=/thuctapdevmaster01-firebase-adminsdk-hqi2u-f9b1b6acb7.json